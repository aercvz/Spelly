local players = game:GetService("Players")
local httpService = game:GetService("HttpService")
local collectionService = game:GetService("CollectionService")

local player = players.LocalPlayer
local character, head, torso

local function character_added()
	character = player.Character
	head = character:WaitForChild("Head")
	torso = character:WaitForChild("Torso")
end
local function character_removed()
	character = nil
	head = nil
	torso = nil
end

character_added()
player.CharacterAdded:Connect(character_added)
player.CharacterRemoving:Connect(character_removed)

--# config

local config = "settings.spelly"

local default = {
	["menuKeybind"] = Enum.KeyCode.RightControl
}

local settings

if not pcall(function() readfile(config) end) then
	writefile(config, httpService:JSONEncode(default))
end

settings = httpService:JSONDecode(readfile(config))

local function saveSettings()
	writefile(config, httpService:JSONEncode(settings))
end

local function changeValue(setting, value)
	settings[setting] = value
	writefile(config, httpService:JSONEncode(settings))
end

--#

--# notifications

local notifLibrary = loadstring(game:HttpGet("https://raw.githubusercontent.com/Kinlei/Dynissimo/main/Scripts/AkaliNotif.lua"))()
local notifyFunction = notifLibrary.Notify

local function notify(title, text, dur)
	notifyFunction({
		Description = text;
		Title = title;
		Duration = dur
	})
end

--#

--# library

local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/insanedude59/SplixUiLib/main/Main"))()
local window = library:new({
	textsize = 13.5,
	font = Enum.Font.RobotoMono,
	name = "Spelly HUB",
	color = BrickColor.Random().Color,
	key = default["menuKeybind"]
})

local tab = window:page({
	name = "Main"
})
local section = tab:section({
	name = "Insert Key",
	side = "left",
	size = 150
})
section:button({
	name = "Headless",
	callback = function()
		if not collectionService:HasTag(character, "Knocked") then
			notify("spelly", "headless requires you to be ragdolled in order to use it", 2.5)
		else
			head:Destroy()
		end
	end,
})
section:keybind({
	name = "Menu Keybind",
	def = default["menuKeybind"],
	callback = function(key)
		changeValue("menuKeybind", key)
		window.key = key
	end,
})

--#
